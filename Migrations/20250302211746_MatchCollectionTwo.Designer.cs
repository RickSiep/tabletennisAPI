// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TableTennisAPI.Data;

#nullable disable

namespace TableTennisAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250302211746_MatchCollectionTwo")]
    partial class MatchCollectionTwo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TableTennisAPI.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MatchLoserID")
                        .HasColumnType("int");

                    b.Property<int?>("MatchWinnerID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchLoserID");

                    b.HasIndex("MatchWinnerID");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("TableTennisAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Elo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TableTennisAPI.Models.Match", b =>
                {
                    b.HasOne("TableTennisAPI.Models.User", "MatchLoser")
                        .WithMany("MatchAsLoser")
                        .HasForeignKey("MatchLoserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TableTennisAPI.Models.User", "MatchWinner")
                        .WithMany("MatchAsWinner")
                        .HasForeignKey("MatchWinnerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MatchLoser");

                    b.Navigation("MatchWinner");
                });

            modelBuilder.Entity("TableTennisAPI.Models.User", b =>
                {
                    b.Navigation("MatchAsLoser");

                    b.Navigation("MatchAsWinner");
                });
#pragma warning restore 612, 618
        }
    }
}
