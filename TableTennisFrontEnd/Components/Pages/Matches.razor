@page "/matches"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization;
@using TableTennisFrontEnd.Authentication
@using Microsoft.AspNetCore.Authorization
@using TableTennisShared.DTO.Match
@using TableTennisFrontEnd.Components.UI;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApiClient ApiClient
@attribute [Authorize]

<PageTitle>Matches</PageTitle>

<div class="mt-5 pt-5">
    <div class="container">
        <h1>Matches</h1>
        <GenericTableComponent TItem=MatchInformationDto OnPageChanged="UpdateMatches" Items="@MatchDtos" TotalCount="@_totalMatches">
            <HeaderTemplate>
                <th>Voornaam</th>
                <th>Voornaam tegenstander</th>
                <th>Gewonnen</th>
                <th>Verschil in Elo</th>
                <th>Gespeeld op</th>
            </HeaderTemplate>
            <RowTemplate>
                <td>@context.FirstName</td>
                <td>@context.PlayedAgainst</td>
                <td>@(context.Winner ? @context.FirstName : @context.PlayedAgainst)</td>
                <td>@context.EloDifference</td>
                <td>@context.DatePlayed</td>
            </RowTemplate>
        </GenericTableComponent>
    </div>
</div>


@code {
    public List<MatchInformationDto> MatchDtos { get; set; }
    private int _totalMatches;
    private int _pageIndex = 1;

    protected override async Task OnInitializedAsync()
    {
        await UpdateMatches(_pageIndex);
    }

    private async Task UpdateMatches(int pageIndex)
    {
        _pageIndex = pageIndex;
        var formattedMatches = await ApiClient.GetFromJsonAsync<MatchInformationWithTotalMatchesDto>($"/match/formatted?pageIndex={_pageIndex}&pageSize=5");
        MatchDtos = formattedMatches.MatchInformations;
        _totalMatches = formattedMatches.TotalMatches;
    }
}
